import re

text = '''homEwork:
  tHis iz your homeWork, copy these Text to variable.



  You NEED TO normalize it fROM letter CASEs point oF View. also, create one MORE senTENCE witH LAST WoRDS of each existING SENtence and add it to the END OF this Paragraph.



  it iZ misspeLLing here. fix“iZ” with correct “is”, but ONLY when it Iz a mistAKE.



  last iz TO calculate nuMber OF Whitespace characteRS in this Tex. caREFULL, not only Spaces, but ALL whitespaces. I got 87.
'''

# Using split("") to split at multiple newlines,
# and then join with a single newline. This removes empty lines.
text = '\n'.join([paragraph for paragraph in text.split('\n') if paragraph.strip()])

# Normalize text from letter cases point of view
# Make all lower case at first
normalized_text = text.lower()

# True capitalize function
def capitalize_sentence(sentence):
    return sentence[0].upper() + sentence[1:]

# Capitalize each sentence in the text
text1 = re.sub(r'([A-z][^.!?]*[.!?])', lambda m: capitalize_sentence(m.group()), normalized_text)

# Create a sentence with the last words of each existing sentence
sentences = text1.split('.')
last_words = [s.strip().split(' ')[-1] for s in sentences[:-1]]
new_sentence = ' '.join(last_words) + '.'
new_sentence = new_sentence.capitalize()

# Define word after which new sentence should be added
key_word = 'paragraph.'
# Add new sentense to the text
if key_word in text1:
    text2 = text1.replace(key_word, key_word + '\n' + new_sentence)

# Correct the misspellings of "iz"
fixed_text = text2.replace(' iz ', ' is ')

print(fixed_text)

# Count all whitespace characters
whitespace_count = fixed_text.count(' ') + fixed_text.count('\n') + fixed_text.count('\t')

print('\n whitespace count: ', whitespace_count)
